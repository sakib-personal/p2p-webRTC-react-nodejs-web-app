server {
  listen 80;
  server_name mdsakibhossain.com www.mdsakibhossain.com;
  server_tokens off;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  if ($request_method ~ ^(TRACE)$) {
    return 405;
  }

  listen 443 ssl;
  server_name mdsakibhossain.com www.mdsakibhossain.com;
  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/localhost/mdsakibhossain.com-chain.pem;
  ssl_certificate_key /etc/letsencrypt/live/localhost/mdsakibhossain.com-key.pem;

  # proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
  # proxy_set_header X-Forwarded-Proto $scheme; # to forward the original protocol (HTTP or HTTPS)
  # proxy_set_header Host $host; # to forward the original host requested by the client

  # proxy_buffers 8 16k; # Buffer pool = 8 buffers of 16k
  # proxy_buffer_size 16k; # 16k of buffers from pool used for headers
  location / {
    proxy_pass http://192.168.0.105:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # location /apis/ {
  #   proxy_pass http://192.168.0.105:5000;
  #   proxy_http_version 1.1;
  #   proxy_set_header Upgrade $http_upgrade;
  #   proxy_set_header Connection "upgrade";
  #   proxy_cache_bypass $http_upgrade;
  #   proxy_no_cache 1;
  #   proxy_cache_bypass 1;
  # }

  location /socket.io/ {
    proxy_pass http://192.168.0.105:8000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
  }

  # error_page 404 /404.html;
  # location = /404.html {
  #   root /usr/share/nginx/html;
  # }

  # redirect server error pages to the static page /50x.html
  #
  # error_page 500 502 503 504 /50x.html;
  # location = /50x.html {
  #   root /usr/share/nginx/html;
  # }
}
